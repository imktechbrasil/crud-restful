/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from './crud.component';
import * as import1 from '@angular/core/src/change_detection/change_detection_util';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/render/api';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from './services/service';
import * as import7 from '@angular/core/src/linker/view_type';
import * as import8 from '@angular/core/src/change_detection/constants';
import * as import9 from '@angular/core/src/linker/component_factory';
import * as import10 from '@angular/http/src/http';
import * as import11 from '@angular/core/src/linker/view_container';
import * as import12 from './crud-factory.directive.ngfactory';
import * as import13 from '@angular/core/src/linker/component_factory_resolver';
import * as import14 from './crud-factory.directive';
import * as import15 from '../node_modules/@angular/common/src/directives/ng_for.ngfactory';
import * as import16 from 'primeng/components/dom/domhandler';
import * as import17 from '../node_modules/primeng/components/button/button.ngfactory';
import * as import18 from '@angular/core/src/linker/template_ref';
import * as import19 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import20 from '@angular/core/src/linker/element_ref';
import * as import21 from '@angular/common/src/directives/ng_for';
import * as import22 from 'primeng/components/button/button';
export class Wrapper_CrudComponent {
  /*private*/ _eventHandler:Function;
  context:import0.CrudComponent;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  subscription0:any;
  subscription1:any;
  constructor(p0:any) {
    this._changed = false;
    this.context = new import0.CrudComponent(p0);
    this._expr_0 = import1.UNINITIALIZED;
    this._expr_1 = import1.UNINITIALIZED;
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    (this.subscription0 && this.subscription0.unsubscribe());
    (this.subscription1 && this.subscription1.unsubscribe());
  }
  check_clazz(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.clazz = currValue;
      this._expr_0 = currValue;
    }
  }
  check_model(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this._changed = true;
      this.context.model = currValue;
      this._expr_1 = currValue;
    }
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    if (!throwOnChange) { if ((view.numberOfChecks === 0)) { this.context.ngOnInit(); } }
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any,emit0:boolean,emit1:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.onSave.subscribe(_eventHandler.bind(view,'onSave'))); }
    if (emit1) { (this.subscription1 = this.context.onCancel.subscribe(_eventHandler.bind(view,'onCancel'))); }
  }
}
var renderType_CrudComponent_Host:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,([] as any[]),{});
class View_CrudComponent_Host0 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import0.CrudComponent>;
  _Service_0_3:import6.Service;
  _CrudComponent_0_4:Wrapper_CrudComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_CrudComponent_Host0,renderType_CrudComponent_Host,import7.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import8.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import9.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'crud',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_CrudComponent0(this.viewUtils,this,0,this._el_0);
    this._Service_0_3 = new import6.Service(this.injectorGet(import10.Http,this.parentIndex));
    this._CrudComponent_0_4 = new Wrapper_CrudComponent(this._Service_0_3);
    this.compView_0.create(this._CrudComponent_0_4.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import9.ComponentRef_<any>(0,this,this._el_0,this._CrudComponent_0_4.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import6.Service) && (0 === requestNodeIndex))) { return this._Service_0_3; }
    if (((token === import0.CrudComponent) && (0 === requestNodeIndex))) { return this._CrudComponent_0_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._CrudComponent_0_4.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._CrudComponent_0_4.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const CrudComponentNgFactory:import9.ComponentFactory<import0.CrudComponent> = new import9.ComponentFactory<import0.CrudComponent>('crud',View_CrudComponent_Host0,import0.CrudComponent);
const styles_CrudComponent:any[] = ([] as any[]);
class View_CrudComponent1 extends import2.AppView<any> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  /*private*/ _vc_2:import11.ViewContainer;
  _CrudFactoryDirective_2_5:import12.Wrapper_CrudFactoryDirective;
  _text_3:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import11.ViewContainer) {
    super(View_CrudComponent1,renderType_CrudComponent,import7.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import8.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import9.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'div',new import3.InlineArray2(2,'style','padding-top:5px;'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'div',new import3.InlineArray2(2,'crud-factory',''),(null as any));
    this._vc_2 = new import11.ViewContainer(2,0,this,this._el_2);
    this._CrudFactoryDirective_2_5 = new import12.Wrapper_CrudFactoryDirective(this._vc_2.vcRef,this.parentView.injectorGet(import13.ComponentFactoryResolver,this.parentIndex));
    this._text_3 = this.renderer.createText(this._el_0,'\n',(null as any));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import14.CrudFactoryDirective) && (2 === requestNodeIndex))) { return this._CrudFactoryDirective_2_5.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_2_0_0:any = this.context.$implicit.type;
    this._CrudFactoryDirective_2_5.check_type(currVal_2_0_0,throwOnChange,false);
    const currVal_2_0_1:any = this.context.index;
    this._CrudFactoryDirective_2_5.check_index(currVal_2_0_1,throwOnChange,false);
    const currVal_2_0_2:any = this.context.$implicit.clazzName;
    this._CrudFactoryDirective_2_5.check_clazzName(currVal_2_0_2,throwOnChange,false);
    this._CrudFactoryDirective_2_5.ngDoCheck(this,this._el_2,throwOnChange);
    this._vc_2.detectChangesInNestedViews(throwOnChange);
  }
  destroyInternal():void {
    this._vc_2.destroyNestedViews();
    this._CrudFactoryDirective_2_5.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
var renderType_CrudComponent:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,styles_CrudComponent,{});
export class View_CrudComponent0 extends import2.AppView<import0.CrudComponent> {
  _anchor_0:any;
  /*private*/ _vc_0:import11.ViewContainer;
  _TemplateRef_0_5:any;
  _NgFor_0_6:import15.Wrapper_NgFor;
  _text_1:any;
  _el_2:any;
  _text_3:any;
  _el_4:any;
  _text_5:any;
  _el_6:any;
  _DomHandler_6_3:import16.DomHandler;
  _Button_6_4:import17.Wrapper_Button;
  _text_7:any;
  _el_8:any;
  _DomHandler_8_3:import16.DomHandler;
  _Button_8_4:import17.Wrapper_Button;
  _text_9:any;
  _text_10:any;
  _text_11:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_CrudComponent0,renderType_CrudComponent,import7.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import8.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import9.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._anchor_0 = this.renderer.createTemplateAnchor(parentRenderNode,(null as any));
    this._vc_0 = new import11.ViewContainer(0,(null as any),this,this._anchor_0);
    this._TemplateRef_0_5 = new import18.TemplateRef_(this,0,this._anchor_0);
    this._NgFor_0_6 = new import15.Wrapper_NgFor(this._vc_0.vcRef,this._TemplateRef_0_5,this.parentView.injectorGet(import19.IterableDiffers,this.parentIndex),this.ref);
    this._text_1 = this.renderer.createText(parentRenderNode,'\n\n',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,parentRenderNode,'div',new import3.InlineArray4(4,'class','row','style','padding-top:20px;'),(null as any));
    this._text_3 = this.renderer.createText(this._el_2,'\n    ',(null as any));
    this._el_4 = import3.createRenderElement(this.renderer,this._el_2,'div',new import3.InlineArray2(2,'class','col-md-12'),(null as any));
    this._text_5 = this.renderer.createText(this._el_4,'\n        ',(null as any));
    this._el_6 = import3.createRenderElement(this.renderer,this._el_4,'button',new import3.InlineArray8(6,'label','Save','pButton','','type','button'),(null as any));
    this._DomHandler_6_3 = new import16.DomHandler();
    this._Button_6_4 = new import17.Wrapper_Button(new import20.ElementRef(this._el_6),this._DomHandler_6_3);
    this._text_7 = this.renderer.createText(this._el_4,'    \n        ',(null as any));
    this._el_8 = import3.createRenderElement(this.renderer,this._el_4,'button',new import3.InlineArray8(6,'label','Cancel','pButton','','type','button'),(null as any));
    this._DomHandler_8_3 = new import16.DomHandler();
    this._Button_8_4 = new import17.Wrapper_Button(new import20.ElementRef(this._el_8),this._DomHandler_8_3);
    this._text_9 = this.renderer.createText(this._el_4,'\n    ',(null as any));
    this._text_10 = this.renderer.createText(this._el_2,'\n',(null as any));
    this._text_11 = this.renderer.createText(parentRenderNode,'        \n\n',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_6,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_6));
    var disposable_1:Function = import3.subscribeToRenderElement(this,this._el_8,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_8));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._anchor_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._el_4,
      this._text_5,
      this._el_6,
      this._text_7,
      this._el_8,
      this._text_9,
      this._text_10,
      this._text_11
    ]
    ),[
      disposable_0,
      disposable_1
    ]
    );
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import18.TemplateRef) && (0 === requestNodeIndex))) { return this._TemplateRef_0_5; }
    if (((token === import21.NgFor) && (0 === requestNodeIndex))) { return this._NgFor_0_6.context; }
    if (((token === import16.DomHandler) && (6 === requestNodeIndex))) { return this._DomHandler_6_3; }
    if (((token === import22.Button) && (6 === requestNodeIndex))) { return this._Button_6_4.context; }
    if (((token === import16.DomHandler) && (8 === requestNodeIndex))) { return this._DomHandler_8_3; }
    if (((token === import22.Button) && (8 === requestNodeIndex))) { return this._Button_8_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = this.context.components;
    this._NgFor_0_6.check_ngForOf(currVal_0_0_0,throwOnChange,false);
    this._NgFor_0_6.ngDoCheck(this,this._anchor_0,throwOnChange);
    const currVal_6_0_0:any = 'Save';
    this._Button_6_4.check_label(currVal_6_0_0,throwOnChange,false);
    this._Button_6_4.ngDoCheck(this,this._el_6,throwOnChange);
    const currVal_8_0_0:any = 'Cancel';
    this._Button_8_4.check_label(currVal_8_0_0,throwOnChange,false);
    this._Button_8_4.ngDoCheck(this,this._el_8,throwOnChange);
    this._vc_0.detectChangesInNestedViews(throwOnChange);
    if (!throwOnChange) {
      if ((this.numberOfChecks === 0)) { this._Button_6_4.context.ngAfterViewInit(); }
      if ((this.numberOfChecks === 0)) { this._Button_8_4.context.ngAfterViewInit(); }
    }
  }
  destroyInternal():void {
    this._vc_0.destroyNestedViews();
    this._Button_6_4.ngOnDestroy();
    this._Button_8_4.ngOnDestroy();
  }
  createEmbeddedViewInternal(nodeIndex:number):import2.AppView<any> {
    if ((nodeIndex == 0)) { return new View_CrudComponent1(this.viewUtils,this,0,this._anchor_0,this._vc_0); }
    return (null as any);
  }
  handleEvent_6(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.context.save()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_8(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.context.cancel()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}