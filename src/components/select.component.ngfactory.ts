/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from './select.component';
import * as import1 from '@angular/core/src/change_detection/change_detection_util';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/render/api';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/constants';
import * as import8 from '@angular/core/src/linker/component_factory';
import * as import9 from '../../node_modules/@angular/forms/src/directives/select_control_value_accessor.ngfactory';
import * as import10 from '../../node_modules/@angular/forms/src/directives/select_multiple_control_value_accessor.ngfactory';
import * as import11 from '@angular/core/src/linker/view_container';
import * as import12 from '@angular/core/src/linker/element_ref';
import * as import13 from '@angular/forms/src/directives/select_control_value_accessor';
import * as import14 from '@angular/forms/src/directives/select_multiple_control_value_accessor';
import * as import15 from '../../node_modules/@angular/forms/src/directives/ng_model.ngfactory';
import * as import16 from '../../node_modules/@angular/forms/src/directives/ng_control_status.ngfactory';
import * as import17 from '../../node_modules/@angular/common/src/directives/ng_for.ngfactory';
import * as import18 from '@angular/core/src/linker/template_ref';
import * as import19 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import20 from '@angular/common/src/directives/ng_for';
import * as import21 from '@angular/forms/src/directives/control_value_accessor';
import * as import22 from '@angular/forms/src/directives/ng_model';
import * as import23 from '@angular/forms/src/directives/ng_control';
import * as import24 from '@angular/forms/src/directives/ng_control_status';
import * as import25 from '@angular/core/src/security';
export class Wrapper_SelectComponent {
  /*private*/ _eventHandler:Function;
  context:import0.SelectComponent;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  constructor() {
    this._changed = false;
    this.context = new import0.SelectComponent();
    this._expr_0 = import1.UNINITIALIZED;
    this._expr_1 = import1.UNINITIALIZED;
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  check_index(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.index = currValue;
      this._expr_0 = currValue;
    }
  }
  check_clazzName(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this._changed = true;
      this.context.clazzName = currValue;
      this._expr_1 = currValue;
    }
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    if (!throwOnChange) { if ((view.numberOfChecks === 0)) { this.context.ngOnInit(); } }
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
var renderType_SelectComponent_Host:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,([] as any[]),{});
class View_SelectComponent_Host0 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import0.SelectComponent>;
  _SelectComponent_0_3:Wrapper_SelectComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_SelectComponent_Host0,renderType_SelectComponent_Host,import6.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'selectCrudRestful',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_SelectComponent0(this.viewUtils,this,0,this._el_0);
    this._SelectComponent_0_3 = new Wrapper_SelectComponent();
    this.compView_0.create(this._SelectComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import8.ComponentRef_<any>(0,this,this._el_0,this._SelectComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.SelectComponent) && (0 === requestNodeIndex))) { return this._SelectComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._SelectComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const SelectComponentNgFactory:import8.ComponentFactory<import0.SelectComponent> = new import8.ComponentFactory<import0.SelectComponent>('selectCrudRestful',View_SelectComponent_Host0,import0.SelectComponent);
const styles_SelectComponent:any[] = ([] as any[]);
class View_SelectComponent1 extends import2.AppView<any> {
  _el_0:any;
  _NgSelectOption_0_3:import9.Wrapper_NgSelectOption;
  _NgSelectMultipleOption_0_4:import10.Wrapper_NgSelectMultipleOption;
  _text_1:any;
  /*private*/ _expr_4:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import11.ViewContainer) {
    super(View_SelectComponent1,renderType_SelectComponent,import6.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
    this._expr_4 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'option',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._NgSelectOption_0_3 = new import9.Wrapper_NgSelectOption(new import12.ElementRef(this._el_0),this.renderer,(<View_SelectComponent0>this.parentView)._SelectControlValueAccessor_11_3.context);
    this._NgSelectMultipleOption_0_4 = new import10.Wrapper_NgSelectMultipleOption(new import12.ElementRef(this._el_0),this.renderer,(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'',(null as any));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import13.NgSelectOption) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._NgSelectOption_0_3.context; }
    if (((token === import14.NgSelectMultipleOption) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._NgSelectMultipleOption_0_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = this.context.$implicit.value;
    this._NgSelectOption_0_3.check_ngValue(currVal_0_0_0,throwOnChange,false);
    this._NgSelectOption_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    const currVal_0_1_0:any = this.context.$implicit.value;
    this._NgSelectMultipleOption_0_4.check_ngValue(currVal_0_1_0,throwOnChange,false);
    this._NgSelectMultipleOption_0_4.ngDoCheck(this,this._el_0,throwOnChange);
    const currVal_4:any = import3.inlineInterpolate(1,'',this.context.$implicit.label,'');
    if (import3.checkBinding(throwOnChange,this._expr_4,currVal_4)) {
      this.renderer.setText(this._text_1,currVal_4);
      this._expr_4 = currVal_4;
    }
  }
  destroyInternal():void {
    this._NgSelectOption_0_3.ngOnDestroy();
    this._NgSelectMultipleOption_0_4.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
var renderType_SelectComponent:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,styles_SelectComponent,{});
export class View_SelectComponent0 extends import2.AppView<import0.SelectComponent> {
  _text_0:any;
  _el_1:any;
  _text_2:any;
  _el_3:any;
  _text_4:any;
  _el_5:any;
  _text_6:any;
  _text_7:any;
  _text_8:any;
  _el_9:any;
  _text_10:any;
  _el_11:any;
  _SelectControlValueAccessor_11_3:import9.Wrapper_SelectControlValueAccessor;
  _NG_VALUE_ACCESSOR_11_4:any[];
  _NgModel_11_5:import15.Wrapper_NgModel;
  _NgControl_11_6:any;
  _NgControlStatus_11_7:import16.Wrapper_NgControlStatus;
  _text_12:any;
  _anchor_13:any;
  /*private*/ _vc_13:import11.ViewContainer;
  _TemplateRef_13_5:any;
  _NgFor_13_6:import17.Wrapper_NgFor;
  _text_14:any;
  _text_15:any;
  _text_16:any;
  _text_17:any;
  /*private*/ _expr_26:any;
  /*private*/ _expr_27:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_SelectComponent0,renderType_SelectComponent,import6.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
    this._expr_26 = import1.UNINITIALIZED;
    this._expr_27 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n        ',(null as any));
    this._el_1 = import3.createRenderElement(this.renderer,parentRenderNode,'div',new import3.InlineArray2(2,'class','row'),(null as any));
    this._text_2 = this.renderer.createText(this._el_1,'\n            ',(null as any));
    this._el_3 = import3.createRenderElement(this.renderer,this._el_1,'div',new import3.InlineArray2(2,'class','col-md-2'),(null as any));
    this._text_4 = this.renderer.createText(this._el_3,'    \n                ',(null as any));
    this._el_5 = import3.createRenderElement(this.renderer,this._el_3,'label',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_6 = this.renderer.createText(this._el_5,'',(null as any));
    this._text_7 = this.renderer.createText(this._el_3,'\n            ',(null as any));
    this._text_8 = this.renderer.createText(this._el_1,'\n            ',(null as any));
    this._el_9 = import3.createRenderElement(this.renderer,this._el_1,'div',new import3.InlineArray2(2,'class','col-md-10'),(null as any));
    this._text_10 = this.renderer.createText(this._el_9,'    \n                ',(null as any));
    this._el_11 = import3.createRenderElement(this.renderer,this._el_9,'select',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._SelectControlValueAccessor_11_3 = new import9.Wrapper_SelectControlValueAccessor(this.renderer,new import12.ElementRef(this._el_11));
    this._NG_VALUE_ACCESSOR_11_4 = [this._SelectControlValueAccessor_11_3.context];
    this._NgModel_11_5 = new import15.Wrapper_NgModel((null as any),(null as any),(null as any),this._NG_VALUE_ACCESSOR_11_4);
    this._NgControl_11_6 = this._NgModel_11_5.context;
    this._NgControlStatus_11_7 = new import16.Wrapper_NgControlStatus(this._NgControl_11_6);
    this._text_12 = this.renderer.createText(this._el_11,'\n                    ',(null as any));
    this._anchor_13 = this.renderer.createTemplateAnchor(this._el_11,(null as any));
    this._vc_13 = new import11.ViewContainer(13,11,this,this._anchor_13);
    this._TemplateRef_13_5 = new import18.TemplateRef_(this,13,this._anchor_13);
    this._NgFor_13_6 = new import17.Wrapper_NgFor(this._vc_13.vcRef,this._TemplateRef_13_5,this.parentView.injectorGet(import19.IterableDiffers,this.parentIndex),this.ref);
    this._text_14 = this.renderer.createText(this._el_11,'\n                ',(null as any));
    this._text_15 = this.renderer.createText(this._el_9,'\n            ',(null as any));
    this._text_16 = this.renderer.createText(this._el_1,'\n        ',(null as any));
    this._text_17 = this.renderer.createText(parentRenderNode,'\n    ',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_11,new import3.InlineArray8(6,'ngModelChange',(null as any),'change',(null as any),'blur',(null as any)),this.eventHandler(this.handleEvent_11));
    this._NgModel_11_5.subscribe(this,this.eventHandler(this.handleEvent_11),true);
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._el_1,
      this._text_2,
      this._el_3,
      this._text_4,
      this._el_5,
      this._text_6,
      this._text_7,
      this._text_8,
      this._el_9,
      this._text_10,
      this._el_11,
      this._text_12,
      this._anchor_13,
      this._text_14,
      this._text_15,
      this._text_16,
      this._text_17
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import18.TemplateRef) && (13 === requestNodeIndex))) { return this._TemplateRef_13_5; }
    if (((token === import20.NgFor) && (13 === requestNodeIndex))) { return this._NgFor_13_6.context; }
    if (((token === import13.SelectControlValueAccessor) && ((11 <= requestNodeIndex) && (requestNodeIndex <= 14)))) { return this._SelectControlValueAccessor_11_3.context; }
    if (((token === import21.NG_VALUE_ACCESSOR) && ((11 <= requestNodeIndex) && (requestNodeIndex <= 14)))) { return this._NG_VALUE_ACCESSOR_11_4; }
    if (((token === import22.NgModel) && ((11 <= requestNodeIndex) && (requestNodeIndex <= 14)))) { return this._NgModel_11_5.context; }
    if (((token === import23.NgControl) && ((11 <= requestNodeIndex) && (requestNodeIndex <= 14)))) { return this._NgControl_11_6; }
    if (((token === import24.NgControlStatus) && ((11 <= requestNodeIndex) && (requestNodeIndex <= 14)))) { return this._NgControlStatus_11_7.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._SelectControlValueAccessor_11_3.ngDoCheck(this,this._el_11,throwOnChange);
    const currVal_11_1_0:any = this.context.value;
    this._NgModel_11_5.check_model(currVal_11_1_0,throwOnChange,false);
    this._NgModel_11_5.ngDoCheck(this,this._el_11,throwOnChange);
    this._NgControlStatus_11_7.ngDoCheck(this,this._el_11,throwOnChange);
    const currVal_13_0_0:any = this.context.values;
    this._NgFor_13_6.check_ngForOf(currVal_13_0_0,throwOnChange,false);
    this._NgFor_13_6.ngDoCheck(this,this._anchor_13,throwOnChange);
    this._vc_13.detectChangesInNestedViews(throwOnChange);
    const currVal_26:any = import3.inlineInterpolate(1,'',this.context.name,'');
    if (import3.checkBinding(throwOnChange,this._expr_26,currVal_26)) {
      this.renderer.setText(this._text_6,currVal_26);
      this._expr_26 = currVal_26;
    }
    const currVal_27:any = this.context.width;
    if (import3.checkBinding(throwOnChange,this._expr_27,currVal_27)) {
      this.renderer.setElementStyle(this._el_11,'width',((this.viewUtils.sanitizer.sanitize(import25.SecurityContext.STYLE,currVal_27) == null)? (null as any): this.viewUtils.sanitizer.sanitize(import25.SecurityContext.STYLE,currVal_27).toString()));
      this._expr_27 = currVal_27;
    }
    this._NgControlStatus_11_7.checkHost(this,this,this._el_11,throwOnChange);
  }
  destroyInternal():void {
    this._vc_13.destroyNestedViews();
    this._NgModel_11_5.ngOnDestroy();
  }
  createEmbeddedViewInternal(nodeIndex:number):import2.AppView<any> {
    if ((nodeIndex == 13)) { return new View_SelectComponent1(this.viewUtils,this,13,this._anchor_13,this._vc_13); }
    return (null as any);
  }
  handleEvent_11(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._SelectControlValueAccessor_11_3.handleEvent(eventName,$event) && result);
    if ((eventName == 'ngModelChange')) {
      const pd_sub_0:any = ((<any>this.context.onChangeObj($event)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}